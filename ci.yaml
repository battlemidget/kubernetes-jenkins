# K8s Jenkin GIT repos
- scm:
    name: k8s-jenkins-jenkaas
    scm:
      - git:
          url: https://github.com/charmed-kubernetes/kubernetes-jenkins.git
          branches:
            - 'master'
        skip-tag: true
        fastpoll: true
        shallow-clone: true
        clean: {before: true}

- scm:
    name: k8s-jenkins-bm
    scm:
      - git:
          url: https://github.com/battlemidget/kubernetes-jenkins.git
          branches:
            - 'stokes-ogc'
        skip-tag: true
        fastpoll: true
        shallow-clone: true
        clean: {before: true}

- parameter:
    name: global-params
    parameters:
      - string:
          name: JOB_SPEC_DIR
          description: |
            Path to the directory that houses the calling spec.toml
      - string:
          name: JOB_SPEC_FILE
          description: |
            Name of the spec file, defaults to `spec.toml`
          default: spec.toml

- parameter:
    name: snap-params
    parameters:
      - string:
          name: SNAP_LIST
          default: builders/snaps/k8s-snap-list.yaml
      - string:
          name: PATCHES_LIST
      - bool:
          name: FORCE
          default: false

- parameter:
    name: juju-params
    parameters:
      - string:
          name: SNAP_VERSION
          description: |
            Version of Kubernetes to test against, in the form of
            <major>.<minor>/<channel> (ie, 1.16/edge).
      - string:
          name: JUJU_CONTROLLER
          default: 'validate-ck'
          description: |
            The Juju controller to create and reference during run.
      - string:
          name: JUJU_MODEL
          default: 'validate'
          description: |
            The Juju model to create and reference during run.
      - string:
          name: JUJU_CLOUD
          default: 'aws/us-east-2'
          description: |
            The Juju cloud to create and reference during run.
      - string:
          name: JUJU_BOOTSTRAP_CONSTRAINTS
          description: |
            Juju bootstrap constraints (ie, 'arch=amd64')
      - bool:
          name: JUJU_BOOTSTRAP_DEBUG
          default: false
          description: |
            Juju bootstrap with debugging output.
      - bool:
          name: JUJU_BOOTSTRAP_DISABLE_ADD_MODEL
          default: false
          description: |
            Disable creating JUJU_MODEL after bootstrap. Useful if model
            configuration changes need to take place prior.
      - string:
          name: JUJU_DEPLOY_BUNDLE
          description: |
            The Juju bundle to deploy.
      - string:
          name: JUJU_DEPLOY_BUNDLE_CHANNEL
          default: 'edge'
          description: |
            The Juju bundle channel to deploy from (ie, stable, candidate, beta, edge).
      - string:
          name: JUJU_DEPLOY_OVERLAY
          description: |
            Path to a YAML overlay bundle fragment

- parameter:
    name: charm-params
    parameters:
      - string:
          name: LAYER_INDEX
          default: 'https://charmed-kubernetes.github.io/layer-index/'
      - string:
          name: LAYER_LIST
          default: "builders/charms/charm-layer-list.yaml"
      - string:
          name: LAYER_BRANCH
          default: 'master'
          description: |
            The layer git branch to checkout prior to building
      - string:
          name: CHARM_BRANCH
          default: 'master'
          description: |
            The charm git branch to checkout prior to building
      - string:
          name: CHARM_LIST
          default: "builders/charms/charm-list.yaml"
      - string:
          name: BUNDLE_LIST
          default: "builders/charms/charm-bundles-list.yaml"
      - string:
          name: BUNDLE_REPO
          default: "https://github.com/charmed-kubernetes/bundle-canonical-kubernetes.git"
      - string:
          name: RESOURCE_SPEC
          default: "builders/charms/resource-spec.yaml"
      - string:
          name: TO_CHANNEL
          default: 'edge'
          description: Channel to publish charm to
      - string:
          name: FILTER_BY_TAG
          default: 'k8s'
          description: |
            Filter the builds by tag (ie. k8s). A tag can also be the name of a
            charm you want to individually build.
      - string:
          name: CHARM_BUILD_DIR
          default: 'build/charms'
      - string:
          name: CHARM_LAYERS_DIR
          default: 'build/layers'
      - string:
          name: CHARM_INTERFACES_DIR
          default: 'build/interfaces'
    jobs:
      - 'ogc-build-charms-bundles'

- builder:
    name: set-env
    builders:
      - shell: |-
          #!/bin/bash
          set -eux

          export VIRTUAL_ENV_DISABLE_PROMPT=1
          export PYTHONPATH="$JOB_SPEC_DIR"
          export CHARM_BUILD_DIR="$WORKSPACE/$CHARM_BUILD_DIR"
          export CHARM_LAYERS_DIR="$WORKSPACE/$CHARM_LAYERS_DIR"
          export CHARM_INTERFACES_DIR="$WORKSPACE/$CHARM_INTERFACES_DIR"
          export TMPDIR="$WORKSPACE/tmp"
          export CHARM_CACHE_DIR=$TMPDIR/.charm
          export GIT_SSH_COMMAND="ssh -i $HOME/.ssh/cdkbot_rsa -oStrictHostKeyChecking=no"
          export PATH=/var/lib/jenkins/venvs/ci/bin:$PATH
          env > $WORKSPACE/build-env.properties

          . /var/lib/jenkins/venvs/ci/bin/activate
          pip install -rrequirements.txt

- builder:
    name: charm-build
    builders:
      - shell: |-
          #!/bin/bash
          set -eux
          . /var/lib/jenkins/venvs/ci/bin/activate

          rm -rf "$CHARM_BUILD_DIR" && mkdir -p "$CHARM_BUILD_DIR"
          rm -rf "$CHARM_LAYERS_DIR" && mkdir -p "$CHARM_LAYERS_DIR"
          rm -rf "$CHARM_INTERFACES_DIR" && mkdir -p "$CHARM_INTERFACES_DIR"
          mkdir -p $TMPDIR

          pip install -r"$JOB_SPEC_DIR"/requirements.txt
          ogc --spec "$JOB_SPEC_DIR"/"$JOB_SPEC_FILE" --debug execute -t build-charms
          ogc --spec "$JOB_SPEC_DIR"/"$JOB_SPEC_FILE" --debug execute -t build-bundles

- builder:
    name: ogc-execute-spec
    builders:
      - shell: |-
          #!/bin/bash
          set -eux

          . /var/lib/jenkins/venvs/ci/bin/activate

          ogc --spec "$JOB_SPEC_DIR"/"$JOB_SPEC_FILE" --debug execute
