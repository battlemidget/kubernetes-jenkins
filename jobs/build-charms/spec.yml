plan:
  - charm:
      env-requires:
        - CHARM_BUILD_DIR
        - CHARM_LAYERS_DIR
        - CHARM_INTERFACES_DIR
        - CHARM_CACHE_DIR
        - CHARM_BRANCH
        - FILTER_BY_TAG
        - LAYER_BRANCH
        - LAYER_INDEX
        - LAYER_LIST
        - CHARM_LIST
        - RESOURCE_SPEC
        - BUNDLE_LIST
        - BUNDLE_REPO
        - TO_CHANNEL
        - TMPDIR
        - WORKSPACE
      script: |
        #!/bin/bash
        set -eux
        python3 charms.py build --charm-list "$CHARM_LIST" \
          --charm-branch "$CHARM_BRANCH" \
          --to-channel "$TO_CHANNEL" \
          --resource-spec "$RESOURCE_SPEC" \
          --filter-by-tag "$FILTER_BY_TAG" \
          --layer-index  "$LAYER_INDEX" \
          --layer-list "$LAYER_LIST" \
          --layer-branch "$LAYER_BRANCH"
      tags = [build-charms]
  - bundle:
      env-requires:
        - FILTER_BY_TAG
        - BUNDLE_LIST
        - BUNDLE_REPO
        - TO_CHANNEL
        - TMPDIR
        - WORKSPACE
      script: |
        #!/bin/bash
        set -eux
        python3 charms.py build-bundles \
          --to-channel "$TO_CHANNEL" \
          --bundle-list "$BUNDLE_LIST" \
          --filter-by-tag "$FILTER_BY_TAG"
      tags: [build-bundles]

meta:
  name: Build charms and bundles
  description: |
    Builds the charms and bundles that make up the Charmed Kubernetes
    deployment.
  long-description: |
    ## Overview

    This spec automates the building of charms in CI. The current method of
    building is as follows:

    1. Download all layers from the defined **LAYER_LIST**, **LAYER_INDEX**,
    **LAYER_BRANCH**
    2. Build each charms using **CHARM_LIST** and **CHARM_BRANCH**. This allows
    the job to build for different risks, _ie. kubernetes-master@stable branch_.
    3. Publishes the built charm to the charmstore for the particular channel
    set by **TO_CHANNEL**
