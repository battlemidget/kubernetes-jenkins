---
- hosts: all
#  connection: local
  gather_facts: yes
  become: true
  vars:
    s390x: "{{ lookup('env', 'S3LP3') }}"
    arm64: "{{ lookup('env', 'NEADER') }}"
  tasks:
    - name: update /etc/environment
      copy:
        src: "environment"
        dest: /etc/environment
        owner: root
        group: root
        mode: 0644
        force: yes
      tags:
        - adhoc
    - name: set snap proxies
      shell: |
        snap set system proxy.http="http://squid.internal:3128"
        snap set system proxy.https="http://squid.internal:3128"
      tags:
        - adhoc
    - sysctl:
        name: net.ipv4.ip_forward
        value: 1
        sysctl_set: yes
        state: present
        reload: yes
      tags:
        - jenkins
    - name: install apt deps
      apt:
        name:
          - build-essential
          - curl
          - default-jre
          - docker.io
          - file
          - flake8
          - tox
          - gcc
          - zlib1g-dev
          - libffi-dev
          - libffi6
          - libssl-dev
          - libxml2-dev
          - make
          - python3-dev
          - python3-pip
          - python3.6
          - python3.6-dev
          - snapcraft
          - snapd
          - sosreport
          - squashfuse
          - strace
          - ubuntu-dev-tools
          - ubuntu-server
          - ubuntu-standard
          - unzip
          - wget
          - tree
          - virtualenv
          - virtualenvwrapper
          - jq
      tags:
        - jenkins
    - name: remove unused debs
      apt:
        name:
          - python-pip
          - juju
          - lxd
          - lxd-client
          - lxcfs
          - lxc-common
          - liblxc1
          - juju-wait
          - libsodium-dev
        state: absent
      tags:
        - jenkins
    - name: use snap core candidate
      command: "snap refresh --candidate core"
      ignore_errors: yes
      tags:
        - adhoc
        - jenkins
    - name: install snap deps
      command: "snap install {{item}}"
      ignore_errors: yes
      loop:
        - "lxd"
        - "juju --classic --channel latest/stable"
        - "juju-wait --classic"
        - "kubectl --classic"
        - "charm --classic --edge"
        - "go --classic --channel 1.12/stable"
        - "multipass"
      tags:
        - jenkins
        - adhoc
    - name: remove unneeded snaps
      command: "snap remove {{item}}"
      ignore_errors: yes
      loop:
        - "microk8s"
        - "bundletester"
      tags:
        - jenkins
    - name: clone juju-wait script
      git:
        repo: 'https://git.launchpad.net/juju-wait'
        dest: /srv/juju-wait
      when: ansible_architecture != "x86_64"
      tags:
        - adhoc
        - jenkins
    - name: copy juju-wait to bindir
      copy:
        src: /srv/juju-wait/juju_wait/__init__.py
        dest: /usr/local/bin/juju-wait
        mode: 0777
        force: yes
        remote_src: yes
      tags:
        - adhoc
        - jenkins
      when: ansible_architecture != "x86_64"
    - name: copy bashrc
      copy:
        src: "bashrc"
        dest: /var/lib/jenkins/.bashrc
        owner: jenkins
        group: jenkins
        mode: 0644
        force: yes
      tags:
        - jenkins
    - name: ssh config
      template:
        src: "ssh_config"
        dest: /var/lib/jenkins/.ssh/config
        owner: jenkins
        group: jenkins
        mode: 0644
        force: yes
      tags:
        - jenkins
    - name: login to charmstore
      command: "charm login"
      become: false
      ignore_errors: yes
      register: charmstore_login
      tags:
        - jenkins
    - name: copy charm creds
      copy:
        src: "{{ lookup('env', 'CHARMCREDS') }}"
        dest: /var/lib/jenkins/.go-cookies
        owner: jenkins
        group: jenkins
        mode: 0644
        force: yes
      become: false
      when: charmstore_login.rc != 0
      tags:
        - jenkins

    - name: login to charmstorex2
      command: "charm login"
      become: false
      when: charmstore_login.rc != 0
      tags:
        - jenkins
    - name: copy snapcraft creds
      copy:
        src: "{{ lookup('env', 'SNAPCRAFTCREDS') }}"
        dest: /var/lib/jenkins/snapcraft-creds
        owner: jenkins
        group: jenkins
        mode: 0644
        force: no
      tags:
        - jenkins
    - name: Creates ssh dir
      file:
        path: /var/lib/jenkins/.ssh
        state: directory
      tags:
        - jenkins
    - name: copy ssh creds
      copy:
        src: "{{ lookup('env', 'CDKBOTSSHCREDS') }}"
        dest: /var/lib/jenkins/.ssh/cdkbot_rsa
        owner: jenkins
        group: jenkins
        mode: 0600
        force: yes
      tags:
        - jenkins
    - name: copy snapcraft creds
      copy:
        src: "{{ lookup('env', 'SNAPCRAFTCPCCREDS') }}"
        dest: /var/lib/jenkins/snapcraft-cpc-creds
        owner: jenkins
        group: jenkins
        mode: 0644
        force: no
      tags:
        - jenkins
    - name: login to snapstore
      command: "snapcraft login --with /var/lib/jenkins/snapcraft-creds"
      become: false
      tags:
        - jenkins
    - name: create aws dir
      file:
        path: /var/lib/jenkins/.aws
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0755
      tags:
        - jenkins
    - name: copy aws creds
      copy:
        src: "{{ lookup('env', 'AWSCREDS') }}"
        dest: /var/lib/jenkins/.aws/credentials
        owner: jenkins
        group: jenkins
        mode: 0644
        force: no
      tags:
        - jenkins
    - name: create juju dir
      file:
        path: /var/lib/jenkins/.local/share/juju
        state: directory
        mode: 0755
      tags:
        - jenkins
    - name: copy juju credentials
      unarchive:
        src: "{{ lookup('env', 'JUJUCREDS') }}"
        dest: /var/lib/jenkins/.local/share/juju
      tags:
        - jenkins
    - name: copy sso creds
      copy:
        src: "{{ lookup('env', 'SSOCREDS') }}"
        dest: /var/lib/jenkins/.local/share/juju/store-usso-token
        owner: jenkins
        group: jenkins
        mode: 0644
      tags:
        - jenkins
    - name: create jaas dir
      file:
        path: /var/lib/jenkins/.local/share/juju/cookies
        state: directory
        mode: 0755
      tags:
        - jenkins
    - name: copy jaas cookie
      copy:
        src: "{{ lookup('env', 'JAASCREDS') }}"
        dest: /var/lib/jenkins/.local/share/juju/cookies/jaas.json
        owner: jenkins
        group: jenkins
        mode: 0600
        force: no
      tags:
        - jenkins
    - name: set perms
      file:
        path: /var/lib/jenkins/.local/share/juju
        owner: jenkins
        group: jenkins
        recurse: yes
      tags:
        - jenkins
    - name: update jenkins user
      user:
        name: jenkins
        groups: jenkins,docker,lxd
      tags:
        - jenkins
    - name: setup lxd network
      command: "/snap/bin/lxd init --auto"
      tags:
        - jenkins
      ignore_errors: yes
    - name: disable ipv6 in lxd
      command: "lxc network set {{item}} ipv6.address none"
      ignore_errors: yes
      loop:
        - 'lxdbr0'
        - 'lxdbr1'
      tags:
        - adhoc
        - jenkins
    - name: set lxd mtu
      command: "lxc network set {{item}} bridge.mtu 1458"
      ignore_errors: yes
      loop:
        - 'lxdbr0'
        - 'lxdbr1'
      tags:
        - adhoc
        - jenkins
    - name: set lxd proxy
      ignore_errors: yes
      shell: |
        lxc config set core.proxy_http http://squid.internal:3128
        lxc config set core.proxy_https http://squid.internal:3128
        lxc config set core.proxy_ignore_hosts localhost
      tags:
        - adhoc
    - name: set docker daemon config
      copy:
        src: docker.daemon.json
        dest: /etc/docker/daemon.json
        force: yes
        owner: root
        group: root
      tags:
        - adhoc
        - jenkins
    - name: restart docker service
      service:
        name: docker
        state: restarted
      tags:
        - adhoc
        - jenkins
    - name: create scapestack dir
      file:
        path: /var/lib/jenkins/.scapestack
        state: directory
        owner: jenkins
        group: jenkins
        mode: 0755
      tags:
        - jenkins
    - name: copy scapestack creds
      copy:
        src: "{{ lookup('env', 'SCAPESTACKCREDS') }}"
        dest: /var/lib/jenkins/.scapestack/scapestack-creds
        owner: jenkins
        group: jenkins
        mode: 0644
      tags:
        - jenkins
    - name: copy scapestack cloud creds
      copy:
        src: "{{ lookup('env', 'SCAPESTACKCLOUD') }}"
        dest: /var/lib/jenkins/.scapestack/scapestack-cloud
        owner: jenkins
        group: jenkins
        mode: 0644
      tags:
        - jenkins
    - name: install sonobuoy
      tags:
        - adhoc
        - jenkins
      become: false
      shell: |
        export GOPATH=$HOME/go
        mkdir -p $HOME/go/bin || true
        mkdir -p $HOME/go/src || true
        go get github.com/heptio/sonobuoy
        cd $HOME/go/src/github.com/heptio/sonobuoy && \
        git checkout v0.15.0 && \
        /snap/bin/go install -i .
        rm -rf $HOME/go/src/github.com/heptio/sonobuoy
      args:
        executable: /bin/bash
